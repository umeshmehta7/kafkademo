name: test workflow
on:
  repository_dispatch:
    types: [test_result]
#  push:
#    branches:
#      - master
#  pull_request:
#  schedule:
#    - cron: '0/2 * * * *'
jobs:
  my-test-command:
    runs-on: ubuntu-latest
    steps:
      - name: dispatchevent payload
        run: |
          echo ${{ github.event.client_payload }}
      - name: setup docker
        run: |
          echo $USER
          sudo apt-get remove docker docker-engine docker.io containerd runc
          sudo apt-get update
          sudo apt-get install \
              ca-certificates \
              curl \
              gnupg \
              lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
          sudo docker run hello-world
           sudo adduser docker
          if id -u "docker" >/dev/null 2>&1; then
            echo "=====user exists===="
            sudo deluser docker
          fi
          sudo adduser docker
          sudo adduser docker
          sudo usermod -aG sudo docker
          groups docker

      - name: Setup ant
        run: |
          sudo apt install zip
          wget https://archive.apache.org/dist/ant/binaries/apache-ant-1.9.1-bin.zip
          unzip -o -q apache-ant-1.9.1-bin.zip
          mkdir -p ~/Tools/ant
          echo "=== before == "
          echo ${PATH}
          echo "=== before == "
          echo "====pass===="
          export ANT_HOME="~/Tools/ant"
          export PATH=${ANT_HOME}/bin:${PATH}
          source /etc/profile
          echo "=== after == "
          ant -version
          echo ${PATH}
          echo "=== after end == "


      - name: SonarCloud Scan
        id: sonar-scan
        if: ${{ needs.set-up.outputs.runSonarAnalysis == 'true' && matrix.plan == 'sonar' }}
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=kafkademo
            -Dsonar.projectKey=kafkademo

      - uses: actions/checkout@v2
      - name: Print path
        run: |
          pwd
          ls -a

      - name: Cache readme
        id: cache-readme
        uses: actions/cache@v2
        with:
          path: README.md
          key: ${{ runner.os }}-readme-1

      - name: Print readme file from cache
        run: echo "${{ steps.cache-readme.outputs.cache-hit}}"

  print-cached-file:
    runs-on: ubuntu-latest
    steps:
      - name: print java version
        run: java -version